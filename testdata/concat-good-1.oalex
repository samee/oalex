
# Test if reference to other rules work,
# even if they are declared later in the file.
greetings_enthusiastic := Concat[greetings, '!']

example greetings_enthusiastic:
  HelloWorld!
outputs success

example greetings_enthusiastic:
  HelloWorld
outputs error with 'Expected \'!\''


# This is HelloWorld with no spaces
greetings := Concat ['Hello', 'World']

example greetings:
  HelloWorld
outputs success

example greetings:
  Hello World
outputs error with 'Expected \'World\''

# Now try using an output template
greetings2 := Concat ['Hello', 'World'] -> {
  greetings_type: arg1,
  addressee: arg2
}

example greetings2:
  HelloWorld
outputs: {
  greetings_type: 'Hello',
  addressee: 'World',
}

# Finally, allow spaces and comments
hardcoded_decl := Concat[word 'var', space, /[a-z]+/, space, ';'] -> {
  stmt_type: 'decl',
  var_name: arg3,
}
space := SkipPoint acrossLines
example hardcoded_decl:
  var precious;
outputs: {
  stmt_type: 'decl',
  var_name: 'precious',
}

example hardcoded_decl:
  var  # variable on the next line
  precious;
outputs success

# Check word boundary detection
example hardcoded_decl:
  varprecious;
outputs error with 'Expected \'var\''

# 'example' is not yet a reserved keyword.
example := Concat [word 'Example', space, word 'rule']
example example:
  Example rule
outputs success

example example:
  Example ruler
outputs error with 'Expected \'rule\''
