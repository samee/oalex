
# Test if reference to other rules work,
# even if they are declared later in the file.
greetings_enthusiastic := Concat[greetings, '!']

example greetings_enthusiastic:
  HelloWorld!
outputs success

example greetings_enthusiastic:
  HelloWorld
outputs error with 'Expected \'!\''


# This is HelloWorld with no spaces
greetings := Concat ['Hello', 'World']

example greetings:
  HelloWorld
outputs success

example greetings:
  Hello World
outputs error with 'Expected \'World\''

# Now try using an output template
greetings2 := Concat ['Hello', 'World'] -> {
  greetings_type: arg1,
  addressee: arg2
}

example greetings2:
  HelloWorld
outputs: {
  greetings_type: 'Hello',
  addressee: 'World',
}

# Finally, allow spaces and comments
# We don't yet support regex rules, so we can't accept arbitrary
#   variable names yet. Unfortunately, WordPreserving isn't supported either,
#   so this will also accept varx;
# TODO: fix these limitations.
hardcoded_decl := Concat['var', space, 'x', space, ';']
space := SkipPoint acrossLines
example hardcoded_decl:
  var x;
outputs success

example hardcoded_decl:
  var  # variable on the next line
  x;
outputs success
