# This no-look `asgn` rule is different from the `_ -> asgn` I was planning.
# This version can fall back to a different rule. The hypothetical blank-match
# version cannot, since that match always succeeds.
rule simple_stmt lookaheads:
| "var" -> decl
| int_value -> error 'Statement cannot start with a number'
| asgn

rule decl:
  var ident = int_value
outputs: {
  stmt: "decl",
  varname: ident,
  init_value: int_value,
}

ident_regex := /[_a-zA-Z]+/
int_value := /-?[0-9]+/

rule ident lookaheads:
| "var" -> error 'Reserved keyword "var" cannot be a variable name'
| ident_regex

rule asgn:
  ident = int_value
outputs: {
  stmt: "asgn",
  lhs: ident,
  rhs: int_value,
}

example simple_stmt:
  var x = 5
outputs: {
  stmt: "decl",
  varname: "x",
  init_value: "5",
}

example simple_stmt:
  x = 5
outputs: {
  stmt: "asgn",
  lhs: "x",
  rhs: "5",
}

example simple_stmt:
  varx = 5
outputs: {
  stmt: "asgn",
  lhs: "varx",
  rhs: "5",
}

example simple_stmt:
  4: varx = 5;
outputs error with 'Statement cannot start with a number'

example decl:
  var var = 5
outputs error with 'Reserved keyword "var" cannot be a variable name'
